# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

---
extends: http://vwf.example.com/node.vwf
implements:
- http://vwf.example.com/xapi.vwf
properties:
  inheritScale: true
  renderDepth: 0
  type: "Node3"
  EditorData:
    renderDepth:
      property: "renderDepth"
      type: "slider"
      displayname: "Render Depth"
      min: 0
      max: 100
  ___audioAPI:
    get: |
          if(!this._audioAPI)
          {
            Object.defineProperty(this,"_audioAPI",{enumerable:false,writable:true});
            this._audioAPI = {};
            this._audioAPI.___self = this;
            var self = this;
            this._audioAPI.playSound=function(soundURL /* the url of the sound */, loop /* loop or not */, volume)
            {
                vwf.callMethod(self.id,'playSound',[soundURL,loop,volume])
                
            }
            this._audioAPI.stopSound=function(soundURL /* the url of the sound */)
            {
                vwf.callMethod(self.id,'stopSound',[soundURL])
               
            }
           this._audioAPI.pauseSound=function(soundURL /* the url of the sound */)
            {
                vwf.callMethod(self.id,'pauseSound',[soundURL])
               
            }
            this._audioAPI.deleteSound=function(soundURL /* the url of the sound */)
            {
                vwf.callMethod(self.id,'deleteSound',[soundURL])
                
            }
           }
           return this._audioAPI;
  ___transformAPI: true
  worldTransform:
  transform:
  playing: false
  looping: false
  visible: true
methods:
  playSound:
  pauseSound:
  stopSound:
events:
  keyDown:
  keyPress:
  keyUp:
  pointerClick:
  pointerDown:
  pointerMove:
  pointerUp:
  pointerEnter:
  pointerOver:
  pointerLeave:
  pointerWheel: 